// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Smartify Working Mail",
            "email": "projectsmartifyapp@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/commit_code_reset_password": {
            "post": {
                "description": "Просто говорит привет, а точнее \"ok\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Функция проверки доступности",
                "responses": {}
            }
        },
        "/forgot_password": {
            "post": {
                "description": "Отправляет код подтверждения на email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Запрос на сброс пароля",
                "responses": {}
            }
        },
        "/login": {
            "post": {
                "description": "Вход по email и паролю, возвращает JWT-токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Email и пароль",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/questionnaire": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Доступно только аутентифицированным пользователям",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questionnaire"
                ],
                "summary": "Создание новой анкеты",
                "responses": {}
            }
        },
        "/refresh_token": {
            "post": {
                "description": "Возвращает новую пару access/refresh токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление JWT-токена",
                "responses": {}
            }
        },
        "/registration_codevalidation": {
            "post": {
                "description": "Валидирует код, отправленный на email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Проверка кода подтверждения",
                "responses": {}
            }
        },
        "/registration_emailvalidation": {
            "post": {
                "description": "Проверяет email и отправляет код подтверждения",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Отправка email для регистрации",
                "responses": {}
            }
        },
        "/registration_password": {
            "post": {
                "description": "Завершает регистрацию, сохраняя пароль",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Установка пароля",
                "responses": {}
            }
        },
        "/reset_password": {
            "post": {
                "description": "Меняет пароль после подтверждения кода",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Установка нового пароля",
                "responses": {}
            }
        }
    },
    "definitions": {
        "database.User": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Smartify Backend API",
	Description:      "REST API для доступа внешним устройствам ко внутренней системе Smartify",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
